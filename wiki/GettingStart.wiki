#summary Getting Start with jQuery4j

=What's jQuery4j=
It's aimed to make user who is familiar with java, but maybe not so familiar with JavaScript can have an easy way to use jQuery widgets.
Please refer to the homepage of jQuery4j project.

=What's ZK=
ZK implemented its widget with jQuery. Therefore, makes it easy to incorporate with other jQuery plugins.
Has its own 120+ component widget ready to use.
Support server side integration. 
Can provide Ajax part support for jQuery.
Also provide a rich set of XUL and XHTML components and a markup language called ZUML(ZK User Interface Markup Language).

= Demo =

{{{
<datepicker id="target" numberOfMonths="2,2"/>
<button label="setNumberOfMonths(1)" onClick="target.setNumberOfMonths(1)"/>
}}}

A [http://docs.zkoss.org/images/6/6a/Datepicker_sample_1.swf Demo]


In above example,
we declare <tt>datepicker</tt> in zul, and then modify its property in java.

=How to Use=
API is mapping to jQuery plugin. So you can set any option.
For example, in the following section, you can see how to set the ''changeMonth'' option of datepicker in zul and in java.

ZK introduced ''model'' concept. You can save the data needed to be presented as model, and render it at client side. It abstracts data from actual  user interface.

For event, it's basically handled in server side.(Though you can also handle event in client side if you like)

== By ZUML == 

In original jQuery UI, you have to write this:

{{{
$(function() {
	$("#datepicker").datepicker();
});

<input id="datepicker" type="text">
}}}

In jQuery4j, the equivalent can be achieved by zul:

{{{
<datepicker/>
}}}

To set an option when initialize datepicker:

{{{
<datepicker changeMonth="true"/>
}}}

To get the date choosed by datepicker:

{{{
<datepicker id="target"/>
<button label="show" onClick="target.getDate()"/>
}}}

target.getDate() will get the date choosed by datepicker whose id is "target".

note: Some component has naming conflict with original zk component, for such component, we'll add 'jq' as prefix, stands for 'jQuery'

== By Pure Java ==

Richlet:
A richlet is a small Java program that creates all necessary components in response to user's request.
You can compose the UI by purely java, without html, ZUML. The programming logic is much like swing.

Sample:
The mapping richlet for

{{{
<datepicker changeMonth="true" />
}}}

is:
{{{
package org.zkoss.jquerydemo;

import org.zkoss.jquery4j.jqueryui.datepicker.Datepicker;
import org.zkoss.zk.ui.GenericRichlet;
import org.zkoss.zk.ui.Page;

public class DatepickerRichlet extends GenericRichlet {

	public void service(Page page) {
		Datepicker comp = new Datepicker();
		comp.setChangeMonth(true);
		comp.setPage(page);
	}
}
}}}

note: You have to properly setup web.xml and zk.xml to make richlet work. Please refer to richlet chapter of developer's guide.

== Model Concept ==
{{{
<zscript>
<![CDATA[
	import org.zkoss.jquery4j.jqueryui.accordion.AccordionModel;    
	String[][] model = {{"t1","c1"},{"t2","c2"}};	
	AccordionModel tm = new AccordionModel(model);
	]]>
</zscript>

<accordion model="${tm}"/>
}}}

ZK will use the data inside model, to render html, then call jQuery's accordion.

note: Currently, model implementation not yet provide much flexibility of jQuery, but it can be approved. Just give me some time to catch up.

== Event ==
Event happened in widget will be send back to server side.
For example
{{{
<jqbutton label="demo" onClick='alert("clicked")' />
}}}
When you click the button, onClick event is send back to server. And server will call alert(), a pure java function.
alert() will send a response back to client side, ask browser to show an message window.

If you want to handle the event without server, please refer to [http://docs.zkoss.org/wiki/Client_Side_Programming ZK: Client Side Programming]

= Download =
 * Download the demo war:[http://jquery4j.googlecode.com/files/jquery4j.war jquery4j.war] , demo of more widgets
 * Download the jar of jQuery4j binary:[http://jquery4j.googlecode.com/files/jquery4j.jar jquery4j.jar]


= See Also =
 * [http://www.zkoss.org ZK official site]
 * [http://jquery.com jQuery official site]
 * [http://jqueryui.com jQuery UI official site]
 * [http://www.zkoss.org/doc/devguide-single/index.html ZK developer guide in html]
 * [http://docs.zkoss.org/wiki/Developer%27s_Guide ZK developer guide in html in wiki]
 * [http://docs.zkoss.org/wiki/Client_Side_Programming ZK: Client Side Programming] 
 * [http://docs.zkoss.org/wiki/How_to_Wrap_a_jQuery_UI_Widget ZK: How to Wrap a jQuery UI Widget]